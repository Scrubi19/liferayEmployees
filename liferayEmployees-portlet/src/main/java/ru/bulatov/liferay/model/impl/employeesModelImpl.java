package ru.bulatov.liferay.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import ru.bulatov.liferay.model.employees;
import ru.bulatov.liferay.model.employeesModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the employees service. Represents a row in the &quot;liferay_employees&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ru.bulatov.liferay.model.employeesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link employeesImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see employeesImpl
 * @see ru.bulatov.liferay.model.employees
 * @see ru.bulatov.liferay.model.employeesModel
 * @generated
 */
public class employeesModelImpl extends BaseModelImpl<employees>
    implements employeesModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a employees model instance should use the {@link ru.bulatov.liferay.model.employees} interface instead.
     */
    public static final String TABLE_NAME = "liferay_employees";
    public static final Object[][] TABLE_COLUMNS = {
            { "employee_id", Types.BIGINT },
            { "lastname", Types.VARCHAR },
            { "firstname", Types.VARCHAR },
            { "middlename", Types.VARCHAR },
            { "gender", Types.VARCHAR },
            { "date_of_birth", Types.VARCHAR },
            { "date_of_employment", Types.VARCHAR },
            { "position_id", Types.BIGINT },
            { "salary", Types.BIGINT },
            { "work_phonenumber", Types.VARCHAR },
            { "mobile_phonenumber", Types.VARCHAR },
            { "bank_id", Types.BIGINT },
            { "archive_status", Types.BOOLEAN }
        };
    public static final String TABLE_SQL_CREATE = "create table liferay_employees (employee_id LONG not null primary key,lastname VARCHAR(75) null,firstname VARCHAR(75) null,middlename VARCHAR(75) null,gender VARCHAR(75) null,date_of_birth VARCHAR(75) null,date_of_employment VARCHAR(75) null,position_id LONG,salary LONG,work_phonenumber VARCHAR(75) null,mobile_phonenumber VARCHAR(75) null,bank_id LONG,archive_status BOOLEAN)";
    public static final String TABLE_SQL_DROP = "drop table liferay_employees";
    public static final String ORDER_BY_JPQL = " ORDER BY employees.employee_id ASC";
    public static final String ORDER_BY_SQL = " ORDER BY liferay_employees.employee_id ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.ru.bulatov.liferay.model.employees"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.ru.bulatov.liferay.model.employees"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.ru.bulatov.liferay.model.employees"),
            true);
    public static long ARCHIVE_STATUS_COLUMN_BITMASK = 1L;
    public static long BANK_ID_COLUMN_BITMASK = 2L;
    public static long POSITION_ID_COLUMN_BITMASK = 4L;
    public static long EMPLOYEE_ID_COLUMN_BITMASK = 8L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.ru.bulatov.liferay.model.employees"));
    private static ClassLoader _classLoader = employees.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            employees.class
        };
    private long _employee_id;
    private String _lastname;
    private String _firstname;
    private String _middlename;
    private String _gender;
    private String _date_of_birth;
    private String _date_of_employment;
    private long _position_id;
    private long _originalPosition_id;
    private boolean _setOriginalPosition_id;
    private long _salary;
    private String _work_phonenumber;
    private String _mobile_phonenumber;
    private long _bank_id;
    private long _originalBank_id;
    private boolean _setOriginalBank_id;
    private boolean _archive_status;
    private boolean _originalArchive_status;
    private boolean _setOriginalArchive_status;
    private long _columnBitmask;
    private employees _escapedModel;

    public employeesModelImpl() {
    }

    @Override
    public long getPrimaryKey() {
        return _employee_id;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setEmployee_id(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _employee_id;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return employees.class;
    }

    @Override
    public String getModelClassName() {
        return employees.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("employee_id", getEmployee_id());
        attributes.put("lastname", getLastname());
        attributes.put("firstname", getFirstname());
        attributes.put("middlename", getMiddlename());
        attributes.put("gender", getGender());
        attributes.put("date_of_birth", getDate_of_birth());
        attributes.put("date_of_employment", getDate_of_employment());
        attributes.put("position_id", getPosition_id());
        attributes.put("salary", getSalary());
        attributes.put("work_phonenumber", getWork_phonenumber());
        attributes.put("mobile_phonenumber", getMobile_phonenumber());
        attributes.put("bank_id", getBank_id());
        attributes.put("archive_status", getArchive_status());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long employee_id = (Long) attributes.get("employee_id");

        if (employee_id != null) {
            setEmployee_id(employee_id);
        }

        String lastname = (String) attributes.get("lastname");

        if (lastname != null) {
            setLastname(lastname);
        }

        String firstname = (String) attributes.get("firstname");

        if (firstname != null) {
            setFirstname(firstname);
        }

        String middlename = (String) attributes.get("middlename");

        if (middlename != null) {
            setMiddlename(middlename);
        }

        String gender = (String) attributes.get("gender");

        if (gender != null) {
            setGender(gender);
        }

        String date_of_birth = (String) attributes.get("date_of_birth");

        if (date_of_birth != null) {
            setDate_of_birth(date_of_birth);
        }

        String date_of_employment = (String) attributes.get(
                "date_of_employment");

        if (date_of_employment != null) {
            setDate_of_employment(date_of_employment);
        }

        Long position_id = (Long) attributes.get("position_id");

        if (position_id != null) {
            setPosition_id(position_id);
        }

        Long salary = (Long) attributes.get("salary");

        if (salary != null) {
            setSalary(salary);
        }

        String work_phonenumber = (String) attributes.get("work_phonenumber");

        if (work_phonenumber != null) {
            setWork_phonenumber(work_phonenumber);
        }

        String mobile_phonenumber = (String) attributes.get(
                "mobile_phonenumber");

        if (mobile_phonenumber != null) {
            setMobile_phonenumber(mobile_phonenumber);
        }

        Long bank_id = (Long) attributes.get("bank_id");

        if (bank_id != null) {
            setBank_id(bank_id);
        }

        Boolean archive_status = (Boolean) attributes.get("archive_status");

        if (archive_status != null) {
            setArchive_status(archive_status);
        }
    }

    @Override
    public long getEmployee_id() {
        return _employee_id;
    }

    @Override
    public void setEmployee_id(long employee_id) {
        _employee_id = employee_id;
    }

    @Override
    public String getLastname() {
        if (_lastname == null) {
            return StringPool.BLANK;
        } else {
            return _lastname;
        }
    }

    @Override
    public void setLastname(String lastname) {
        _lastname = lastname;
    }

    @Override
    public String getFirstname() {
        if (_firstname == null) {
            return StringPool.BLANK;
        } else {
            return _firstname;
        }
    }

    @Override
    public void setFirstname(String firstname) {
        _firstname = firstname;
    }

    @Override
    public String getMiddlename() {
        if (_middlename == null) {
            return StringPool.BLANK;
        } else {
            return _middlename;
        }
    }

    @Override
    public void setMiddlename(String middlename) {
        _middlename = middlename;
    }

    @Override
    public String getGender() {
        if (_gender == null) {
            return StringPool.BLANK;
        } else {
            return _gender;
        }
    }

    @Override
    public void setGender(String gender) {
        _gender = gender;
    }

    @Override
    public String getDate_of_birth() {
        if (_date_of_birth == null) {
            return StringPool.BLANK;
        } else {
            return _date_of_birth;
        }
    }

    @Override
    public void setDate_of_birth(String date_of_birth) {
        _date_of_birth = date_of_birth;
    }

    @Override
    public String getDate_of_employment() {
        if (_date_of_employment == null) {
            return StringPool.BLANK;
        } else {
            return _date_of_employment;
        }
    }

    @Override
    public void setDate_of_employment(String date_of_employment) {
        _date_of_employment = date_of_employment;
    }

    @Override
    public long getPosition_id() {
        return _position_id;
    }

    @Override
    public void setPosition_id(long position_id) {
        _columnBitmask |= POSITION_ID_COLUMN_BITMASK;

        if (!_setOriginalPosition_id) {
            _setOriginalPosition_id = true;

            _originalPosition_id = _position_id;
        }

        _position_id = position_id;
    }

    public long getOriginalPosition_id() {
        return _originalPosition_id;
    }

    @Override
    public long getSalary() {
        return _salary;
    }

    @Override
    public void setSalary(long salary) {
        _salary = salary;
    }

    @Override
    public String getWork_phonenumber() {
        if (_work_phonenumber == null) {
            return StringPool.BLANK;
        } else {
            return _work_phonenumber;
        }
    }

    @Override
    public void setWork_phonenumber(String work_phonenumber) {
        _work_phonenumber = work_phonenumber;
    }

    @Override
    public String getMobile_phonenumber() {
        if (_mobile_phonenumber == null) {
            return StringPool.BLANK;
        } else {
            return _mobile_phonenumber;
        }
    }

    @Override
    public void setMobile_phonenumber(String mobile_phonenumber) {
        _mobile_phonenumber = mobile_phonenumber;
    }

    @Override
    public long getBank_id() {
        return _bank_id;
    }

    @Override
    public void setBank_id(long bank_id) {
        _columnBitmask |= BANK_ID_COLUMN_BITMASK;

        if (!_setOriginalBank_id) {
            _setOriginalBank_id = true;

            _originalBank_id = _bank_id;
        }

        _bank_id = bank_id;
    }

    public long getOriginalBank_id() {
        return _originalBank_id;
    }

    @Override
    public boolean getArchive_status() {
        return _archive_status;
    }

    @Override
    public boolean isArchive_status() {
        return _archive_status;
    }

    @Override
    public void setArchive_status(boolean archive_status) {
        _columnBitmask |= ARCHIVE_STATUS_COLUMN_BITMASK;

        if (!_setOriginalArchive_status) {
            _setOriginalArchive_status = true;

            _originalArchive_status = _archive_status;
        }

        _archive_status = archive_status;
    }

    public boolean getOriginalArchive_status() {
        return _originalArchive_status;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            employees.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public employees toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (employees) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        employeesImpl employeesImpl = new employeesImpl();

        employeesImpl.setEmployee_id(getEmployee_id());
        employeesImpl.setLastname(getLastname());
        employeesImpl.setFirstname(getFirstname());
        employeesImpl.setMiddlename(getMiddlename());
        employeesImpl.setGender(getGender());
        employeesImpl.setDate_of_birth(getDate_of_birth());
        employeesImpl.setDate_of_employment(getDate_of_employment());
        employeesImpl.setPosition_id(getPosition_id());
        employeesImpl.setSalary(getSalary());
        employeesImpl.setWork_phonenumber(getWork_phonenumber());
        employeesImpl.setMobile_phonenumber(getMobile_phonenumber());
        employeesImpl.setBank_id(getBank_id());
        employeesImpl.setArchive_status(getArchive_status());

        employeesImpl.resetOriginalValues();

        return employeesImpl;
    }

    @Override
    public int compareTo(employees employees) {
        long primaryKey = employees.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof employees)) {
            return false;
        }

        employees employees = (employees) obj;

        long primaryKey = employees.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        employeesModelImpl employeesModelImpl = this;

        employeesModelImpl._originalPosition_id = employeesModelImpl._position_id;

        employeesModelImpl._setOriginalPosition_id = false;

        employeesModelImpl._originalBank_id = employeesModelImpl._bank_id;

        employeesModelImpl._setOriginalBank_id = false;

        employeesModelImpl._originalArchive_status = employeesModelImpl._archive_status;

        employeesModelImpl._setOriginalArchive_status = false;

        employeesModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<employees> toCacheModel() {
        employeesCacheModel employeesCacheModel = new employeesCacheModel();

        employeesCacheModel.employee_id = getEmployee_id();

        employeesCacheModel.lastname = getLastname();

        String lastname = employeesCacheModel.lastname;

        if ((lastname != null) && (lastname.length() == 0)) {
            employeesCacheModel.lastname = null;
        }

        employeesCacheModel.firstname = getFirstname();

        String firstname = employeesCacheModel.firstname;

        if ((firstname != null) && (firstname.length() == 0)) {
            employeesCacheModel.firstname = null;
        }

        employeesCacheModel.middlename = getMiddlename();

        String middlename = employeesCacheModel.middlename;

        if ((middlename != null) && (middlename.length() == 0)) {
            employeesCacheModel.middlename = null;
        }

        employeesCacheModel.gender = getGender();

        String gender = employeesCacheModel.gender;

        if ((gender != null) && (gender.length() == 0)) {
            employeesCacheModel.gender = null;
        }

        employeesCacheModel.date_of_birth = getDate_of_birth();

        String date_of_birth = employeesCacheModel.date_of_birth;

        if ((date_of_birth != null) && (date_of_birth.length() == 0)) {
            employeesCacheModel.date_of_birth = null;
        }

        employeesCacheModel.date_of_employment = getDate_of_employment();

        String date_of_employment = employeesCacheModel.date_of_employment;

        if ((date_of_employment != null) && (date_of_employment.length() == 0)) {
            employeesCacheModel.date_of_employment = null;
        }

        employeesCacheModel.position_id = getPosition_id();

        employeesCacheModel.salary = getSalary();

        employeesCacheModel.work_phonenumber = getWork_phonenumber();

        String work_phonenumber = employeesCacheModel.work_phonenumber;

        if ((work_phonenumber != null) && (work_phonenumber.length() == 0)) {
            employeesCacheModel.work_phonenumber = null;
        }

        employeesCacheModel.mobile_phonenumber = getMobile_phonenumber();

        String mobile_phonenumber = employeesCacheModel.mobile_phonenumber;

        if ((mobile_phonenumber != null) && (mobile_phonenumber.length() == 0)) {
            employeesCacheModel.mobile_phonenumber = null;
        }

        employeesCacheModel.bank_id = getBank_id();

        employeesCacheModel.archive_status = getArchive_status();

        return employeesCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(27);

        sb.append("{employee_id=");
        sb.append(getEmployee_id());
        sb.append(", lastname=");
        sb.append(getLastname());
        sb.append(", firstname=");
        sb.append(getFirstname());
        sb.append(", middlename=");
        sb.append(getMiddlename());
        sb.append(", gender=");
        sb.append(getGender());
        sb.append(", date_of_birth=");
        sb.append(getDate_of_birth());
        sb.append(", date_of_employment=");
        sb.append(getDate_of_employment());
        sb.append(", position_id=");
        sb.append(getPosition_id());
        sb.append(", salary=");
        sb.append(getSalary());
        sb.append(", work_phonenumber=");
        sb.append(getWork_phonenumber());
        sb.append(", mobile_phonenumber=");
        sb.append(getMobile_phonenumber());
        sb.append(", bank_id=");
        sb.append(getBank_id());
        sb.append(", archive_status=");
        sb.append(getArchive_status());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(43);

        sb.append("<model><model-name>");
        sb.append("ru.bulatov.liferay.model.employees");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>employee_id</column-name><column-value><![CDATA[");
        sb.append(getEmployee_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lastname</column-name><column-value><![CDATA[");
        sb.append(getLastname());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>firstname</column-name><column-value><![CDATA[");
        sb.append(getFirstname());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>middlename</column-name><column-value><![CDATA[");
        sb.append(getMiddlename());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>gender</column-name><column-value><![CDATA[");
        sb.append(getGender());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>date_of_birth</column-name><column-value><![CDATA[");
        sb.append(getDate_of_birth());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>date_of_employment</column-name><column-value><![CDATA[");
        sb.append(getDate_of_employment());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>position_id</column-name><column-value><![CDATA[");
        sb.append(getPosition_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>salary</column-name><column-value><![CDATA[");
        sb.append(getSalary());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>work_phonenumber</column-name><column-value><![CDATA[");
        sb.append(getWork_phonenumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>mobile_phonenumber</column-name><column-value><![CDATA[");
        sb.append(getMobile_phonenumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>bank_id</column-name><column-value><![CDATA[");
        sb.append(getBank_id());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>archive_status</column-name><column-value><![CDATA[");
        sb.append(getArchive_status());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
